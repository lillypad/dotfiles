;; -*- mode: emacs-lisp -*-
;; This file is loaded by Spacemacs at startup.
;; It must be stored in your home directory.

(defun dotspacemacs/layers ()
  (setq-default
   dotspacemacs-distribution 'spacemacs
   dotspacemacs-enable-lazy-installation 'unused
   dotspacemacs-ask-for-lazy-installation t
   dotspacemacs-configuration-layer-path '()
   dotspacemacs-configuration-layers
   '(
     xkcd
     rcirc
     lsp
     (c-c++ :variables c-c++-enable-clang-support t)
     themes-megapack
     latex
     html
     sql
     windows-scripts
     yaml
     csv
     lua
     php
     ruby
     rust
     c-c++
     csharp
     asciidoc
     emoji
     javascript
     windows-scripts
     shell-scripts
     python
     helm
     auto-completion
     emacs-lisp
     git
     markdown
     org
     spell-checking
     syntax-checking
     version-control
     )
   dotspacemacs-additional-packages '(emms)
   dotspacemacs-frozen-packages '()
   dotspacemacs-excluded-packages '()
   dotspacemacs-install-packages 'used-only))

(defun dotspacemacs/init ()
  (setq-default
   dotspacemacs-elpa-https t
   dotspacemacs-elpa-timeout 5
   dotspacemacs-check-for-update nil
   dotspacemacs-elpa-subdirectory nil
   dotspacemacs-editing-style 'vim
   dotspacemacs-verbose-loading nil
   dotspacemacs-startup-banner 'official
   dotspacemacs-startup-lists '((recents . 5)
                                (projects . 7))
   dotspacemacs-startup-buffer-responsive t
   dotspacemacs-scratch-mode 'text-mode
   dotspacemacs-themes '(darkokai
                         spacemacs-dark
                         spacemacs-light)
   dotspacemacs-colorize-cursor-according-to-state t
   dotspacemacs-default-font '("Source Code Pro"
                               :size 13
                               :weight normal
                               :width normal
                               :powerline-scale 1.1)
   dotspacemacs-leader-key "SPC"
   dotspacemacs-emacs-command-key "SPC"
   dotspacemacs-ex-command-key ":"
   dotspacemacs-emacs-leader-key "M-m"
   dotspacemacs-major-mode-leader-key ","
   dotspacemacs-major-mode-emacs-leader-key "C-M-m"
   dotspacemacs-distinguish-gui-tab nil
   dotspacemacs-remap-Y-to-y$ nil
   dotspacemacs-retain-visual-state-on-shift t
   dotspacemacs-visual-line-move-text nil
   dotspacemacs-ex-substitute-global nil
   dotspacemacs-default-layout-name "Default"
   dotspacemacs-display-default-layout nil
   dotspacemacs-auto-resume-layouts nil
   dotspacemacs-large-file-size 1
   dotspacemacs-auto-save-file-location 'cache
   dotspacemacs-max-rollback-slots 5
   dotspacemacs-helm-resize nil
   dotspacemacs-helm-no-header nil
   dotspacemacs-helm-position 'bottom
   dotspacemacs-helm-use-fuzzy 'always
   dotspacemacs-enable-paste-transient-state nil
   dotspacemacs-which-key-delay 0.4
   dotspacemacs-which-key-position 'bottom
   dotspacemacs-loading-progress-bar t
   dotspacemacs-fullscreen-at-startup nil
   dotspacemacs-fullscreen-use-non-native nil
   dotspacemacs-maximized-at-startup nil
   dotspacemacs-active-transparency 90
   dotspacemacs-inactive-transparency 90
   dotspacemacs-show-transient-state-title t
   dotspacemacs-show-transient-state-color-guide t
   dotspacemacs-mode-line-unicode-symbols t
   dotspacemacs-smooth-scrolling t
   dotspacemacs-line-numbers t
   dotspacemacs-folding-method 'evil
   dotspacemacs-smartparens-strict-mode nil
   dotspacemacs-smart-closing-parenthesis nil
   dotspacemacs-highlight-delimiters 'all
   dotspacemacs-persistent-server nil
   dotspacemacs-search-tools '("ag" "pt" "ack" "grep")
   dotspacemacs-default-package-repository nil
   dotspacemacs-whitespace-cleanup nil
   ))

(defun dotspacemacs/user-init ()
  (setenv "PATH"
          (concat
           (getenv "HOME") "/.cargo/bin/" ":"
           (getenv "PATH")))
  (setq dotspacemacs-mode-line-theme '(vim-powerline :separator 'arrow))
  (setq company-idle-delay 0)
  (setq company-minimum-prefix-length 1)
  (setq company-tooltip-limit 20)
  (setq company-tooltip-align-annotations t))

(defun dotspacemacs/user-config ()
  (use-package emms
    :defer t
    :init
    (require 'emms-setup)
    (emms-standard)
    (emms-history-load)
    (spacemacs/declare-prefix "am" "emms")
    (spacemacs/set-leader-keys "amc" 'emms-player-mpd-connect
      "amp" 'emms-player-mpd-play
      "amP" 'emms-player-mpd-pause
      "amn" 'emms-player-mpd-next
      "amp" 'emms-player-mpd-previous
      "amS" 'emms-player-mpd-stop
      "ami" 'emms-player-mpd-show
      "amu" 'emms-player-mpd-update-all
      "amU" 'emms-player-mpd-update-all-reset-cache)
    :config
    (setq emms-source-file-default-directory (expand-file-name "~/Music"))
    (setq emms-playlist-buffer-name "*Music*"))
  (defun my-jk ()
    (interactive)
    (let* ((initial-key ?j)
           (final-key ?k)
           (timeout 0.5)
           (event (read-event nil nil timeout)))
      (if event
          (if (and (characterp event) (= event final-key))
              (evil-normal-state)
            (insert initial-key)
            (push event unread-command-events))
        (insert initial-key))))
  (define-key evil-insert-state-map (kbd "j") 'my-jk)
  (defun magit-section-highlight-less (section _)
    (magit-section-case
      ((untracked unstaged staged unpushed unpulled)
       (magit-section-make-overlay (magit-section-start section)
                                   (magit-section-content section)
                                   'magit-section-highlight) t)))
  (add-hook 'magit-section-highlight-hook 'magit-section-highlight-less)
  (set-face-background 'line-number nil)
  (set-face-foreground 'line-number "#404040"))

(defun on-after-init ()
  (unless (display-graphic-p (selected-frame))
    (set-face-background 'default "unspecified-bg" (selected-frame))))
(add-hook 'window-setup-hook 'on-after-init)
